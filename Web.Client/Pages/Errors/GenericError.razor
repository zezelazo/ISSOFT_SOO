@{
    RenderFragment copyToClipboardButton =
            @<HxButton OnClick="CopyExceptionDetailsToClipboard" CssClass="text-secondary" Icon="BootstrapIcon.Clipboard" />;
}

<div class="container-lg generic-error">
	<div class="text-center my-4">
		<img src="/oops.svg" class="mw-100" width="500" alt="Oops">
	</div>

	<div class="text-center">
		<h1>Oops...</h1>
        <p class="lead">@GenericErrorLocalizer.ErrorOccured</p>
        <HxButton Color="ThemeColor.Primary" OnClick="this.OnRecover" Text="@GenericErrorLocalizer.Recover" CssClass="me-2" />
        <HxButton Color="ThemeColor.Secondary" OnClick="HandleRestartClick" Text="@GenericErrorLocalizer.Restart" />
    </div>

	<HxAccordion CssClass="my-4">
		<HxAccordionItem>
			<HeaderTemplate>
				@Exception.GetType().Name: @Exception.Message
			</HeaderTemplate>
			<BodyTemplate>
				<div class="position-relative pe-4">
					<div class="position-absolute top-0 end-0">
                        <HxTooltip WrapperCssClass="@(_copiedToClipboard ? "d-none" : null)" @ref="_copyToClipboardTooltip" Text="@GenericErrorLocalizer.CopyToClipboard">
							@copyToClipboardButton
                        </HxTooltip>

                        <HxTooltip WrapperCssClass="@(_copiedToClipboard ? null : "d-none")" @ref="_copiedToClipboardTooltip" Text="@GenericErrorLocalizer.CopiedToClipboard">
                            @copyToClipboardButton
                        </HxTooltip>
                    </div>
					<code>
						<pre class="mb-0">
							@GetFullExceptionText()
						</pre>
					</code>
				</div>
			</BodyTemplate>
		</HxAccordionItem>
	</HxAccordion>
	<p class="text-center pt-2">
		Operation ID: @_traceId
	</p>
</div>
